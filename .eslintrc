{
	"root": true,
	"ignorePatterns": [],
	"env": {
		"browser": true,
		"es6": true,
		"jest": true
	},
	"overrides": [
		{
			"files": ["*.ts"],
			"parserOptions": {
				"project": ["tsconfig.json"],
				"createDefaultProgram": true
			},
			"plugins": ["prettier"],
			"extends": ["ambar-eslint", "prettier"],
			"rules": {
				"@typescript-eslint/restrict-template-expressions": "off",
				"@typescript-eslint/adjacent-overload-signatures": "error",
				"@typescript-eslint/array-type": "off",
				"@typescript-eslint/await-thenable": "error",
				"@typescript-eslint/ban-ts-comment": "error",
				"@typescript-eslint/ban-types": [
					"error",
					{
						"types": {
							"Object": {
								"message": "Avoid using the `Object` type. Did you mean `object`?"
							},
							"Function": {
								"message": "Avoid using the `Function` type. Prefer a specific function type, like `() => void`."
							},
							"Boolean": {
								"message": "Avoid using the `Boolean` type. Did you mean `boolean`?"
							},
							"Number": {
								"message": "Avoid using the `Number` type. Did you mean `number`?"
							},
							"String": {
								"message": "Avoid using the `String` type. Did you mean `string`?"
							},
							"Symbol": {
								"message": "Avoid using the `Symbol` type. Did you mean `symbol`?"
							}
						}
					}
				],
				"@typescript-eslint/consistent-type-assertions": "error",
				"@typescript-eslint/dot-notation": "error",
				"@typescript-eslint/explicit-member-accessibility": [
					"off",
					{
						"accessibility": "explicit"
					}
				],
				"@typescript-eslint/explicit-module-boundary-types": "warn",
				"@typescript-eslint/indent": [
					"off",
					2,
					{
						"FunctionDeclaration": {
							"parameters": "first"
						},
						"FunctionExpression": {
							"parameters": "first"
						}
					}
				],
				"@typescript-eslint/member-delimiter-style": [
					"error",
					{
						"multiline": {
							"delimiter": "semi",
							"requireLast": true
						},
						"singleline": {
							"delimiter": "semi",
							"requireLast": false
						}
					}
				],
				"@typescript-eslint/member-ordering": "error",
				"@typescript-eslint/naming-convention": "off",
				"@typescript-eslint/no-array-constructor": "error",
				"@typescript-eslint/no-empty-function": "off",
				"@typescript-eslint/no-empty-interface": "error",
				"@typescript-eslint/no-explicit-any": "off",
				"@typescript-eslint/no-extra-non-null-assertion": "error",
				"@typescript-eslint/no-extra-semi": "error",
				"@typescript-eslint/no-floating-promises": "off",
				"@typescript-eslint/no-for-in-array": "error",
				"@typescript-eslint/no-implied-eval": "error",
				"@typescript-eslint/no-inferrable-types": [
					"error",
					{
						"ignoreParameters": true
					}
				],
				"@typescript-eslint/no-misused-new": "error",
				"@typescript-eslint/no-misused-promises": "error",
				"@typescript-eslint/no-namespace": "error",
				"@typescript-eslint/no-non-null-asserted-optional-chain": "error",
				"@typescript-eslint/no-non-null-assertion": "error",
				"@typescript-eslint/no-parameter-properties": "off",
				"@typescript-eslint/no-shadow": [
					"error",
					{
						"hoist": "all"
					}
				],
				"@typescript-eslint/no-this-alias": "error",
				"@typescript-eslint/no-unnecessary-type-assertion": "error",
				"@typescript-eslint/no-unsafe-return": "off",
				"@typescript-eslint/no-unsafe-assignment": "off",
				"@typescript-eslint/no-unsafe-call": "off",
				"@typescript-eslint/no-unsafe-member-access": "off",
				"@typescript-eslint/no-unused-expressions": "off",
				"@typescript-eslint/no-use-before-define": "off",
				"@typescript-eslint/no-var-requires": "off",
				"@typescript-eslint/prefer-as-const": "error",
				"@typescript-eslint/prefer-for-of": "off",
				"@typescript-eslint/prefer-function-type": "error",
				"@typescript-eslint/prefer-namespace-keyword": "error",
				"@typescript-eslint/prefer-regexp-exec": "error",
				"prefer-rest-params": "off",
				"prefer-spread": "warn",
				"@typescript-eslint/require-await": "off",
				"@typescript-eslint/restrict-plus-operands": "error",
				"@typescript-eslint/semi": ["error", "always"],
				"@typescript-eslint/triple-slash-reference": [
					"error",
					{
						"path": "always",
						"types": "prefer-import",
						"lib": "always"
					}
				],
				"@typescript-eslint/type-annotation-spacing": "error",
				"@typescript-eslint/unbound-method": "off",
				"@typescript-eslint/unified-signatures": "error",
				"prettier/prettier": "error"
			}
		}
	]
}
